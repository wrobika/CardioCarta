@model CardioCarta.Models.WarningViewModel

@{
    ViewBag.Title = "Pobierz lokalizację";
}

<h2>Wybierz lokalizację, dla której chcesz sprawdzić ostrzeżenia</h2>

<script type="text/javascript">

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Location)

        <div id="map" class="map"></div>
        <script>
            var defaultPosition = [19.940984, 50.062006];

            var rasterLayer = new ol.layer.Tile({
                source: new ol.source.OSM()
            });

            var vectorSource = new ol.source.Vector();
            var vectorLayer = new ol.layer.Vector({
                source: vectorSource
            });

            var style = new ol.style.Style({
                image: new ol.style.Circle({
                    radius: 10,
                    fill: new ol.style.Fill({
                        color: 'red',
                    })
                }),
            });

            const map = new ol.Map({
                layers: [rasterLayer, vectorLayer],
                target: 'map',
                view: new ol.View({
                    center: ol.proj.fromLonLat(defaultPosition),
                    zoom: 12
                })
            });

            function setPosition(coords) {
                const feature = new ol.Feature(
                    new ol.geom.Point(ol.proj.fromLonLat(coords)),
                );
                feature.setStyle(style);
                feature.setId("location");
                vectorSource.addFeature(feature);
            }

            function getLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(success, error,
                        { enableHighAccuracy: true });
                } else {
                    alert("Cannot get Geolocation");
                }
            }
            function success(location) {
                setPosition([location.coords.longitude, location.coords.latitude]);
                document.getElementById("Location").value = location.coords.longitude + " " + location.coords.latitude;
            }
            function error(event) {
                setPosition(defaultPosition);
                document.getElementById("Location").value = defaultPosition[0] + " " + defaultPosition[1];
                alert("Nie udało się pobrać Twojej lokalizacji\n" +
                    event.code + ": " + event.message);
            }
            getLocation()

            map.on('click', function (event) {
                vectorSource.getFeatureById("location").getGeometry().setCoordinates(event.coordinate);
                var coords = ol.proj.transform(event.coordinate, 'EPSG:3857', 'EPSG:4326');
                var latitude = coords[1];
                var longitude = coords[0];
                document.getElementById("Location").value = longitude + " " + latitude;
            });
        </script>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Pobierz ostrzeżenia" class="btn btn-default" />
            </div>
        </div>
    </div>
}
