
@{
    ViewBag.Title = "Map";
}
<div id="map" class="map"></div>
    <form>
      <label>cluster distance</label>
      <input id="distance" type="range" min="0" max="100" step="1" value="40"/>
    </form>
    <script>

        @{
            var mapController = new CardioCarta.Controllers.MapController();
            var data = mapController.GetPointsWKT();
        }

        var list = @Html.Raw(Json.Encode(data));
        var distance = document.getElementById('distance');
        var wktReader = new ol.format.WKT();
        var featureCollection = [];

        for (var i = 0; i < list.length; i++) {
            var feature = wktReader.readFeature(list[i]);
            feature.getGeometry().transform('EPSG:4326', 'EPSG:3857');
            featureCollection.push(feature);
        }

        var source = new ol.source.Vector({
            features: featureCollection
        });

        var clusterSource = new ol.source.Cluster({
        distance: parseInt(distance.value, 10),
        source: source
        });

        var styleCache = {};
        var clusters = new ol.layer.Vector({
            source: clusterSource,
            style: function(feature) {
              var size = feature.get('features').length;
              var style = styleCache[size];
              if (!style) {
                  style = new ol.style.Style({
                      image: new ol.style.Circle({
                    radius: 10,
                    stroke: new ol.style.Stroke({
                      color: '#fff'
                    }),
                    fill: new ol.style.Fill({
                      color: '#3399CC'
                    })
                  }),
                  text: new ol.style.Text({
                    text: size.toString(),
                    fill: new ol.style.Fill({
                      color: '#fff'
                    })
                  })
                });
                styleCache[size] = style;
              }
              return style;
            }
        });

        var raster = new ol.layer.Tile({
        source: new ol.source.OSM()
        });

        var map = new ol.Map({
        layers: [raster, clusters],
        target: 'map',
        view: new ol.View({
            center: ol.proj.fromLonLat([19.938618, 50.060601]),
            zoom: 12
        })
        });

        distance.addEventListener('input', function() {
            clusterSource.setDistance(parseInt(distance.value, 10));
        });
</script>

